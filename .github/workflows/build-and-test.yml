name: Build and Test

on:
  pull_request:
    branches: [ main, stable ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    services:
      postgres-crypter:
        image: postgres
        env:
          POSTGRES_PASSWORD: DEFAULT_PASSWORD
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      postgres-hangfire:
        image: postgres
        env:
          POSTGRES_PASSWORD: DEFAULT_PASSWORD
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install wasm-tools
      run: dotnet workload install wasm-tools

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Create Crypter database
      run: |
         sudo apt-get install --yes --no-install-recommends postgresql-client
         export PGPASSWORD=DEFAULT_PASSWORD

         psql -h 127.0.0.1 -U postgres <<-EOSQL
            CREATE DATABASE crypter;
            CREATE USER crypter_user WITH PASSWORD 'DEFAULT_PASSWORD';

            REVOKE ALL PRIVILEGES ON DATABASE postgres FROM crypter_user;
            REVOKE ALL PRIVILEGES ON SCHEMA public FROM crypter_user;

            CREATE SCHEMA IF NOT EXISTS Crypter AUTHORIZATION crypter_user;
            GRANT CREATE ON schema Crypter TO crypter_user;
         EOSQL

         dotnet tool install --global dotnet-ef
         dotnet tool restore
         dotnet ef database update -c DataContext -p Crypter.Core -s Crypter.API --connection "host=127.0.0.1:5432;database=crypter;user id=crypter_user;pwd=DEFAULT_PASSWORD;"

    - name: Create Hangfire database
      run: |
          sudo apt-get install --yes --no-install-recommends postgresql-client
          export PGPASSWORD=DEFAULT_PASSWORD
          psql -h 127.0.0.1 -U postgres <<-EOSQL
            CREATE DATABASE crypter_hangfire;
            CREATE USER crypter_hangfire_user WITH PASSWORD 'DEFAULT_PASSWORD';

            REVOKE ALL PRIVILEGES ON DATABASE crypter FROM crypter_hangfire_user;
            REVOKE ALL PRIVILEGES ON SCHEMA public FROM crypter_hangfire_user;

            CREATE SCHEMA IF NOT EXISTS Hangfire AUTHORIZATION crypter_hangfire_user;
            GRANT CREATE ON schema Hangfire TO crypter_hangfire_user;
          EOSQL

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
